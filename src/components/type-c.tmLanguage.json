{
    "scopeName": "source.type-c",
    "name": "type-c",
    "fileTypes": ["tc"],
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#punctuation"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.type-c",
                    "match": "//.*",
                    "captures": {
                        "0": {
                            "name": "comment.line.double-slash"
                        }
                    }
                },
                {
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.type-c",
                    "captures": {
                        "0": {
                            "name": "comment.block.documentation"
                        }
                    }
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.type-c",
                    "match": "\\b(as|as!|as?|break|cfn|class|const|continue|coroutine|do|else|enum|extern|false|fn|for|foreach|from|if|import|in|interface|is|let|match|mut|mutate|new|null|return|static|strict|struct|this|true|type|unreachable|variant|while|yield|yield!)\\b"
                }
            ]
        },
        "data-types": {
            "patterns": [
                {
                    "name": "storage.type.type-c",
                    "match": "\\b(i8|u8|i16|u16|i32|u32|u64|i64|f32|f64|bool|coroutine|void)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.type-c",
                    "match": "\"(\\\\.|[^\"])*\""
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.char.type-c",
                    "match": "'[^']'"
                },
                {
                    "name": "constant.numeric.binary.type-c",
                    "match": "0b[01]+"
                },
                {
                    "name": "constant.numeric.octal.type-c",
                    "match": "0o[0-7]+"
                },
                {
                    "name": "constant.numeric.hex.type-c",
                    "match": "0x[0-9A-Fa-f]+"
                },
                {
                    "name": "constant.numeric.float.type-c",
                    "match": "[0-9]+\\.[0-9]+f"
                },
                {
                    "name": "constant.numeric.double.type-c",
                    "match": "[0-9]+\\.[0-9]+"
                },
                {
                    "name": "constant.numeric.int.type-c",
                    "match": "\\b[0-9]+\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.type-c",
                    "match": "\\+|-|\\*|/|%|=|==|!=|<|>|<=|>=|&&|\\|\\||!|\\^|&|\\||~|<<|>>|\\+=|->|=>"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "name": "punctuation.type-c",
                    "match": "\\{|\\}|\\[|\\]|\\(|\\)|\\.|,|;|:|->|=>"
                }
            ]
        }
    }
}
